
#Область ПрограммныйИнтерфейс

// Проверить заполненность колонок реквизита формы.
//
// Параметры:
//  Форма        - УправляемаяФорма - форма, реквизит которой проверяется.
//  ИмяТаблицы   - Строка - имя проверяемого реквизита.
//  ИменаКолонок - Строка - имена проверяемых колонок таблицы через запятую.
//  Отказ        - Булево - признак наличия ошибок.
//
Процедура ПроверитьЗаполненностьКолонокРеквизитаФормы(Знач Форма, Знач ИмяТаблицы, Знач ИменаКолонок, Отказ) Экспорт
	
	Перем ЗначениеКолонки;
	
	МассивКолонок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаКолонок);
	Таблица = Форма[ИмяТаблицы];
	
	ПредставленияКолонок = Новый Соответствие;
	Для Каждого ИмяКолонки Из МассивКолонок Цикл
		ИмяКолонкиБезСпецСимволов = СокрЛП(ИмяКолонки);
		ПредставленияКолонок.Вставить(ИмяКолонкиБезСпецСимволов, ПредставлениеРеквизитаФормы(Форма, ИмяТаблицы, ИмяКолонкиБезСпецСимволов));
	КонецЦикла;
	
	Для ТекИндекс = 0 По Таблица.Количество() - 1 Цикл
		
		Для Каждого Элемент Из ПредставленияКолонок Цикл
			
			Если Не Таблица[ТекИндекс].Свойство(Элемент.Ключ, ЗначениеКолонки) Тогда
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(ЗначениеКолонки) Тогда
				Продолжить;
			КонецЕсли;
			
			Сообщение = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", Элемент.Значение, Формат(ТекИндекс + 1, "ЧГ="), ИмяТаблицы);
			ОбщегоНазначения.СообщитьПользователю(
				Сообщение,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТаблицы, ТекИндекс + 1, Элемент.Ключ),
				,
				Отказ);
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

// Проверить задвоенность реквизита в таблице.
//
// Параметры:
//  ДокументОбъект             - ДокументОбъект - документ для проверки.
//  ИмяТаблицы                 - Строка - имя таблицы для проверки.
//  ИмяРеквизита               - Строка - имя реквизита для проверки.
//  Отказ                      - Булево - флаг отказа.
//  ПустоеЗначениеРеквизита    - Строка, Число, Неопределено - значение реквизита, которое не проверяем.
//  ВыводЧерезСообщитьОбОшибке - Булево - если Истина, то выводим сообщение через СообщитьОбОшибке, вместо СообщитьПользователю.
//
Процедура ПроверитьЗадвоенностьРеквизитаВТаблице(Знач ДокументОбъект,
													Знач ИмяТаблицы,
													Знач ИмяРеквизита,
													Отказ,
													Знач ПустоеЗначениеРеквизита = Неопределено) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.ИмяРеквизита КАК Реквизит
	|ПОМЕСТИТЬ КонтрольнаяТаблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрольнаяТаблица.Реквизит КАК Реквизит,
	|	КОЛИЧЕСТВО(КонтрольнаяТаблица.Реквизит) КАК КоличествоПовторений
	|ИЗ
	|	КонтрольнаяТаблица КАК КонтрольнаяТаблица
	|ГДЕ
	|	ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрольнаяТаблица.Реквизит
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(КонтрольнаяТаблица.Реквизит) > 1";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяРеквизита", ИмяРеквизита);
	Если ПустоеЗначениеРеквизита <> Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИСТИНА", "КонтрольнаяТаблица.Реквизит<>&ПустоеЗначениеРеквизита");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", ДокументОбъект[ИмяТаблицы]);
	Запрос.УстановитьПараметр("ПустоеЗначениеРеквизита", ПустоеЗначениеРеквизита);
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Сообщение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("В таблице ""%1"" для реквизита ""%2"" со значением ""%3"" найдено несколько строк",
			ИмяТаблицы,
			ИмяРеквизита,
			Выборка.Реквизит);
		ОбщегоНазначения.СообщитьПользователю(Сообщение, ДокументОбъект, , , Отказ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеРеквизитаФормы(Знач Форма, Знач ИмяТаблицы, Знач ИмяРеквизитаФормы)
	
	Результат = ИмяРеквизитаФормы;
	ЗаголовокЭлемента = Форма.Элементы[ИмяТаблицы + ИмяРеквизитаФормы].Заголовок;
	
	Если Не ПустаяСтрока(ЗаголовокЭлемента) Тогда
		Результат = ЗаголовокЭлемента;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
