
#Область ПрограммныйИнтерфейс

// Свернуть группировки отчета
//
// Параметры:
//  ТабличныйДокумент - ТабличныйДокумент - объект, к котором требуется свернуть группировки.
//
Процедура СвернутьГруппировкиОтчета(ТабличныйДокумент) Экспорт
	
	КоличествоГруппировокСтрок = ТабличныйДокумент.КоличествоУровнейГруппировокСтрок() - 2;
	Если КоличествоГруппировокСтрок >= 0 Тогда
		Для Счетчик = 0 По КоличествоГруппировокСтрок Цикл
			ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(КоличествоГруппировокСтрок - Счетчик);
		КонецЦикла;
	КонецЕсли;
	
	КоличествоГруппировокКолонок = ТабличныйДокумент.КоличествоУровнейГруппировокКолонок() - 2;
	Если КоличествоГруппировокКолонок >= 0 Тогда
		Для Счетчик = 0 По КоличествоГруппировокКолонок Цикл
			ТабличныйДокумент.ПоказатьУровеньГруппировокКолонок(КоличествоГруппировокКолонок - Счетчик);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Установить значение отбора или параметра отчета
//
// Параметры:
//  КомпоновщикНастроек	 - КомпоновщикНастроекКомпоновкиДанных	 - компоновщик, в который добавляется отбор.
//  ИмяОтбора			 - Строка								 - имя поля, по которому устанавливается отбор.
//  Значение			 - Произвольное							 - значение поля, тип зависит от значений, содержащихся в поле.
//  ВидСравнения		 - ВидСравненияКомпоновкиДанных			 - вид сравнения.
//
Процедура УстановитьЗначениеОтбора(КомпоновщикНастроек, Знач ИмяОтбора, Знач Значение, Знач ВидСравнения = Неопределено) Экспорт
	
	Если ВидСравнения = Неопределено Тогда
		ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	
	НастройкиКомпоновщика = КомпоновщикНастроек.Настройки;
	ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных(ИмяОтбора);
	
	Если НастройкиКомпоновщика.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновки) = Неопределено Тогда
		
		ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяОтбора);
		ПроверитьДоступностьПоляДляОтбора(НастройкиКомпоновщика, ПолеКомпоновки);
		
		ЭлементОтбора = НастройкиКомпоновщика.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки;
		ЭлементОтбора.ВидСравнения = ВидСравнения;
		ЭлементОтбора.ПравоеЗначение = Значение;
		ЭлементОтбора.Использование = Истина;
		
	Иначе
		НастройкиКомпоновщика.ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрКомпоновки, Значение);
	КонецЕсли;
	
КонецПроцедуры

// Применить отборы к отчету.
//
// Параметры:
//  Отборы - Соответствие - ключ: имя поля, значение: значение отбора.
//  ОтчетОбъект - ОтчетОбъект, Структура - отчет, для которого формируется результат (нужны свойства КомпоновщикНастроек).
//
Процедура ПрименитьОтборыКОтчету(Знач Отборы, ОтчетОбъект) Экспорт
	
	Для Каждого Элемент Из Отборы Цикл
		
		Если ТипЗнч(Элемент.Значение) = Тип("Массив") Или ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда
			ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		
		УстановитьЗначениеОтбора(ОтчетОбъект.КомпоновщикНастроек, Элемент.Ключ, Элемент.Значение, ВидСравненияОтбора);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДоступностьПоляДляОтбора(Знач НастройкиКомпоновщика, Знач ПолеКомпоновкиДанных)
	
	Если НастройкиКомпоновщика.ДоступныеПоляОтбора.Элементы.Найти(ПолеКомпоновкиДанных) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВызватьИсключение СтрШаблон("Поле ""%1"" недоступно для отбора", ПолеКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти
