
#Область ПрограммныйИнтерфейс

// Останавливает выполнение кода на заданное время через фоновое задание.
//
// Параметры:
//  КоличествоСекунд - Число - время ожидания в секундах.
//
Процедура ПаузаЧерезЗадание(Знач КоличествоСекунд) Экспорт
	
	Если фмОжиданияКлиентСервер.НеНужнаЗапускатьПаузу(КоличествоСекунд) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийСеансИнформационнойБазы = ПолучитьТекущийСеансИнформационнойБазы();
	ФоновоеЗадание = ТекущийСеансИнформационнойБазы.ПолучитьФоновоеЗадание();
	
	Если ФоновоеЗадание = Неопределено Тогда
		Параметры = Новый Массив;
		Параметры.Добавить(КоличествоСекунд);
		ФоновоеЗадание = ФоновыеЗадания.Выполнить("фмОжидания.ПаузаЧерезЗадание", Параметры);
	КонецЕсли;
	
	Попытка
		ФоновоеЗадание.ОжидатьЗавершения(КоличествоСекунд);
	Исключение
		Причина = "При ожидании завершения заданий наступил таймаут";
		Если Не фмОбработкаИсключенийКлиентСервер.ЯвляетсяОшибкойНужногоТипа(ИнформацияОбОшибке(), Причина, Истина) Тогда
			ВызватьИсключение;
		КонецЕсли;
	КонецПопытки;
	
КонецПроцедуры

// Подождать пока не наступит указанное время через фоновое задание.
//
// Параметры:
//  ВремяЗавершения - Дата - время.
//
Процедура ПодождатьДоЧерезЗадание(Знач ВремяЗавершения) Экспорт
	
	Если ТипЗнч(ВремяЗавершения) <> Тип("Дата") Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСекунд = ВремяЗавершения - ТекущаяДатаСеанса();
	Если фмОжиданияКлиентСервер.НеНужнаЗапускатьПаузу(КоличествоСекунд) Тогда
		Возврат;
	КонецЕсли;
	
	ПаузаЧерезЗадание(КоличествоСекунд);
	
КонецПроцедуры

#КонецОбласти