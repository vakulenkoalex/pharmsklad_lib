
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Запуск заданий.
//
// Параметры:
//  ПараметрыЗапуска            - ТаблицаЗначений - настройки для запуска заданий см. ПараметрыЗапуска.
//  КоличествоПотоковВыполнения - Число - число одновременно запускаемых заданий.
//  ОжидатьЗавершения           - Булево - ожидать завершения созданных фоновых заданий.
//  СообщенияФоновыхЗаданий     - Соответствие - сообщения из созданных фоновых заданий.
//  ЗаданияЗавершенныеАварийно  - Соответствие - наименований заданий, завершенных аварийно и причины завершения.
//
Процедура Старт(Знач ПараметрыЗапуска,
				Знач КоличествоПотоковВыполнения,
				Знач ОжидатьЗавершения = Ложь,
				СообщенияФоновыхЗаданий = Неопределено,
				ЗаданияЗавершенныеАварийно = Неопределено) Экспорт
	
	СообщенияФоновыхЗаданий = Новый Соответствие();
	ЗаданияЗавершенныеАварийно = Новый Соответствие();
	
	ИдентификаторыЗапущенныеЗаданий = Новый Массив();
	МетодДляЗапуска = "ОбщегоНазначения.ВыполнитьМетодКонфигурации";
	
	Для Каждого Элемент Из ПараметрыЗапуска Цикл
		
		ПараметрыЗадания = Новый Массив();
		ПараметрыЗадания.Добавить(Элемент.ИмяМетода);
		ПараметрыЗадания.Добавить(Элемент.Параметры);
		Задание = ФоновыеЗадания.Выполнить(МетодДляЗапуска, ПараметрыЗадания, , Элемент.Наименование);
		
		ИдентификаторыЗапущенныеЗаданий.Добавить(Задание.УникальныйИдентификатор);
		
		Пока ИдентификаторыЗапущенныеЗаданий.Количество() >= КоличествоПотоковВыполнения Цикл
			ПроверкаЗавершенияЗаданий(ИдентификаторыЗапущенныеЗаданий, СообщенияФоновыхЗаданий, ЗаданияЗавершенныеАварийно);
		КонецЦикла;
		
	КонецЦикла;
	
	Если ОжидатьЗавершения Тогда
		
		Пока ИдентификаторыЗапущенныеЗаданий.Количество() > 0 Цикл
			ПроверкаЗавершенияЗаданий(ИдентификаторыЗапущенныеЗаданий, СообщенияФоновыхЗаданий, ЗаданияЗавершенныеАварийно);
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Конструктор параметров запуска.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - настройки для запуска заданий, имена полей совпадают с методом ФоновыеЗадания.Выполнить.
//
Функция ПараметрыЗапуска() Экспорт
	
	ПараметрыЗапуска = Новый ТаблицаЗначений();
	ПараметрыЗапуска.Колонки.Добавить("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ПараметрыЗапуска.Колонки.Добавить("ИмяМетода", ОбщегоНазначения.ОписаниеТипаСтрока(200));
	ПараметрыЗапуска.Колонки.Добавить("Параметры");
	
	Возврат ПараметрыЗапуска;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверкаЗавершенияЗаданий(ЗапущенныеЗадания, СообщенияФоновыхЗаданий, ЗаданияЗавершенныеАварийно)
	
	УдаляемыеЗадания = Новый Массив();
	
	Для Каждого Идентификатор Из ЗапущенныеЗадания Цикл
		
		ТекущееЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
		
		Если ТекущееЗадание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
			Продолжить;
		КонецЕсли;
		
		УдаляемыеЗадания.Добавить(Идентификатор);
		
		СообщенияЗадания = СообщенияФоновыхЗаданий.Получить(ТекущееЗадание.Наименование);
		Если СообщенияЗадания = Неопределено Тогда
			СообщенияЗадания = Новый Массив();
		КонецЕсли;
		
		Для Каждого Сообщение Из ТекущееЗадание.ПолучитьСообщенияПользователю(Истина) Цикл
			СообщенияЗадания.Добавить(Сообщение);
		КонецЦикла;
		
		Если СообщенияЗадания.Количество() > 0 Тогда
			СообщенияФоновыхЗаданий.Вставить(ТекущееЗадание.Наименование, СообщенияЗадания);
		КонецЕсли;
		
		Если ТекущееЗадание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно
			Или ТекущееЗадание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
			
			ЗаданияЗавершенныеАварийно.Вставить(ТекущееЗадание.Наименование, ТекущееЗадание.ИнформацияОбОшибке);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Идентификатор Из УдаляемыеЗадания Цикл
		ЗапущенныеЗадания.Удалить(ЗапущенныеЗадания.Найти(Идентификатор));
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
