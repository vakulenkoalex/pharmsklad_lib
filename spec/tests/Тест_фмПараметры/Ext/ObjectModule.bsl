
// BSLLS:BeginTransactionBeforeTryCatch-off
// BSLLS:DuplicateStringLiteral-off
// BSLLS:MagicNumber-off
// BSLLS:PairingBrokenTransaction-off
// BSLLS:PublicMethodsDescription-off
// BSLLS:UsingServiceTag-off
// BSLLS:WrongUseOfRollbackTransactionMethod-off

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем КонтекстЯдра; // Контекст проигрывателя тестов
Перем Ожидаем; // Контекст плагина с методами проверки утверждений

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область xddTestRunner

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("Тест_ЕслиНеУказалиОбластьИНеНашлиПараметрТоВозвращаемЗначениеПоУмолчанию");
	НаборТестов.Добавить("Тест_ЕслиНеУказалиОбластьИНашлиПараметрТоВозвращаемНайденноеЗначение");
	НаборТестов.Добавить("Тест_ЕслиУказалиОбластьИОбластьСовпадаетТоВозвращаемНайденноеЗначение");
	НаборТестов.Добавить("Тест_ЕслиУказалиОбластьИОбластьНеСовпадаетИУказанПараметраДляОбластиРавнойНеопределеноТоВозвращаемЗначениеДляОбластиРавнойНеопределено");
	НаборТестов.Добавить("Тест_ЕслиУказалиОбластьИОбластьНеСовпадаетИНетПараметраДляОбластиРавнойНеопределеноТоВозвращаемЗначениеПоУмолчанию");
	НаборТестов.Добавить("Тест_ЕслиУказалиИмяКомпьютераИИмяКомпьютераСовпадаетТоВозвращаемНайденноеЗначение");
	НаборТестов.Добавить("Тест_ЕслиУказалиИмяКомпьютераИИмяКомпьютераНеСовпадаетТоВозвращаемЗначениеПоУмолчанию");
	НаборТестов.Добавить("Тест_ЕслиВФункцииУказалиОбластьПримененияТоИщемСПриоритетомИзФункции");
	
КонецПроцедуры

#КонецОбласти

#Область ЮнитТесты

#Область ОбщиеПроцедурыТестов

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеТестов

Процедура Тест_ЕслиНеУказалиОбластьИНеНашлиПараметрТоВозвращаемЗначениеПоУмолчанию() Экспорт
	
	ПараметрыСеанса.фмТекущаяОбластьПримененияПараметра = Ложь;
	ОбновитьПовторноИспользуемыеЗначения();
	
	Результат = РегистрыСведений.фмПараметры.ПрочитатьЗначениеПараметра("тест", 1);
	Ожидаем.Что(Результат, "результат функции").Равно(1);
	
КонецПроцедуры

Процедура Тест_ЕслиНеУказалиОбластьИНашлиПараметрТоВозвращаемНайденноеЗначение() Экспорт
	
	ПараметрыСеанса.фмТекущаяОбластьПримененияПараметра = Ложь;
	ОбновитьПовторноИспользуемыеЗначения();
	
	Запись = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	Запись.ИмяПараметра = "тест";
	Запись.ЗначениеПараметра = 2;
	Запись.Записать();
	
	Результат = РегистрыСведений.фмПараметры.ПрочитатьЗначениеПараметра("тест", 1);
	Ожидаем.Что(Результат, "результат функции").Равно(2);
	
КонецПроцедуры

Процедура Тест_ЕслиУказалиОбластьИОбластьСовпадаетТоВозвращаемНайденноеЗначение() Экспорт
	
	ПараметрыСеанса.фмТекущаяОбластьПримененияПараметра = Истина;
	ОбновитьПовторноИспользуемыеЗначения();
	
	Запись = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	Запись.ОбластьПрименения = Истина;
	Запись.ИмяПараметра = "тест";
	Запись.ЗначениеПараметра = 2;
	Запись.Записать();
	
	Результат = РегистрыСведений.фмПараметры.ПрочитатьЗначениеПараметра("тест", 1);
	Ожидаем.Что(Результат, "результат функции").Равно(2);
	
КонецПроцедуры

Процедура Тест_ЕслиУказалиОбластьИОбластьНеСовпадаетИУказанПараметраДляОбластиРавнойНеопределеноТоВозвращаемЗначениеДляОбластиРавнойНеопределено() Экспорт
	
	ПараметрыСеанса.фмТекущаяОбластьПримененияПараметра = Ложь;
	ОбновитьПовторноИспользуемыеЗначения();
	
	Запись = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	Запись.ОбластьПрименения = Ложь;
	Запись.ИмяПараметра = "тест";
	Запись.ЗначениеПараметра = 2;
	Запись.Записать();
	
	Запись = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	Запись.ОбластьПрименения = Истина;
	Запись.ИмяПараметра = "тест";
	Запись.ЗначениеПараметра = 3;
	Запись.Записать();
	
	Результат = РегистрыСведений.фмПараметры.ПрочитатьЗначениеПараметра("тест", 1);
	Ожидаем.Что(Результат, "результат функции").Равно(2);
	
КонецПроцедуры

Процедура Тест_ЕслиУказалиОбластьИОбластьНеСовпадаетИНетПараметраДляОбластиРавнойНеопределеноТоВозвращаемЗначениеПоУмолчанию() Экспорт
	
	ПараметрыСеанса.фмТекущаяОбластьПримененияПараметра = Ложь;
	ОбновитьПовторноИспользуемыеЗначения();
	
	Запись = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	Запись.ОбластьПрименения = Истина;
	Запись.ИмяПараметра = "тест";
	Запись.ЗначениеПараметра = 3;
	Запись.Записать();
	
	Результат = РегистрыСведений.фмПараметры.ПрочитатьЗначениеПараметра("тест", 1);
	Ожидаем.Что(Результат, "результат функции").Равно(1);
	
КонецПроцедуры

Процедура Тест_ЕслиУказалиИмяКомпьютераИИмяКомпьютераСовпадаетТоВозвращаемНайденноеЗначение() Экспорт
	
	ПараметрыСеанса.фмТекущаяОбластьПримененияПараметра = Ложь;
	ОбновитьПовторноИспользуемыеЗначения();
	
	Запись = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	Запись.ИмяПараметра = "тест";
	Запись.ЗначениеПараметра = 2;
	Запись.ИмяКомпьютера = ИмяКомпьютера();
	Запись.Записать();
	
	Результат = РегистрыСведений.фмПараметры.ПрочитатьЗначениеПараметра("тест", 1);
	Ожидаем.Что(Результат, "результат функции").Равно(2);
	
КонецПроцедуры

Процедура Тест_ЕслиУказалиИмяКомпьютераИИмяКомпьютераНеСовпадаетТоВозвращаемЗначениеПоУмолчанию() Экспорт
	
	ПараметрыСеанса.фмТекущаяОбластьПримененияПараметра = Ложь;
	ОбновитьПовторноИспользуемыеЗначения();
	
	Запись = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	Запись.ИмяПараметра = "тест";
	Запись.ЗначениеПараметра = 2;
	Запись.ИмяКомпьютера = "123";
	Запись.Записать();
	
	Результат = РегистрыСведений.фмПараметры.ПрочитатьЗначениеПараметра("тест", 1);
	Ожидаем.Что(Результат, "результат функции").Равно(1);
	
КонецПроцедуры

Процедура Тест_ЕслиВФункцииУказалиОбластьПримененияТоИщемСПриоритетомИзФункции() Экспорт
	
	Запись = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	Запись.ОбластьПрименения = Истина;
	Запись.ИмяПараметра = "тест";
	Запись.ЗначениеПараметра = 2;
	Запись.Записать();
	
	Результат = РегистрыСведений.фмПараметры.ПрочитатьЗначениеПараметра("тест", 1, Истина);
	Ожидаем.Что(Результат, "результат функции").Равно(2);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
