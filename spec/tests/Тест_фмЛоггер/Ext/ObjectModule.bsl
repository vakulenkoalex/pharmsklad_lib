
// BSLLS:BeginTransactionBeforeTryCatch-off
// BSLLS:DuplicateStringLiteral-off
// BSLLS:MagicNumber-off
// BSLLS:PairingBrokenTransaction-off
// BSLLS:PublicMethodsDescription-off
// BSLLS:UsingServiceTag-off
// BSLLS:WrongUseOfRollbackTransactionMethod-off

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем КонтекстЯдра; // Контекст проигрывателя тестов
Перем Ожидаем; // Контекст плагина с методами проверки утверждений

Перем ФайлСЛогом; // Имя файла с логом

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область xUnitFor1C

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("Тест_ЛогПишетсяВФайлВФорматеJSON");
	НаборТестов.Добавить("Тест_ОтрабатываетсяЗапрещенныйСимволВСообщении");
	НаборТестов.Добавить("Тест_ОтладочноеСообщениеПишетсяТолькоПриУстановкеПараметра");
	НаборТестов.Добавить("Тест_СложныеДанныеИзЛогаСохраняютсяВJson");
	НаборТестов.Добавить("Тест_ЛогированиеРаботаетПослеИсключенияПриЗаписиВБазу");
	НаборТестов.Добавить("Тест_ОтладкаРаботаетПослеИсключенияПриЗаписиВБазу");
	
КонецПроцедуры

#КонецОбласти

#Область ЮнитТесты

#Область ОбщиеПроцедурыТестов

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
	МенеджерЗаписи = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИмяПараметра = "ЛоггерПутьКФайлу";
	МенеджерЗаписи.ЗначениеПараметра = ПолучитьИмяВременногоФайла("txt");
	МенеджерЗаписи.Записать();
	
	МенеджерЗаписи = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИмяПараметра = "ЛоггерВключитьСообщенияПользователю";
	МенеджерЗаписи.ЗначениеПараметра = "Тест";
	МенеджерЗаписи.Записать();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	ФайлСЛогом = Обработки.фмЛоггер.ПолучитьИмяФайлаСЛогом();
	УдалитьФайлы(ФайлСЛогом);
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	УдалитьФайлы(ФайлСЛогом);
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеТестов

Процедура Тест_ЛогПишетсяВФайлВФорматеJSON() Экспорт
	
	Файл = Новый Файл(ФайлСЛогом);
	Ожидаем.Что(Файл.Существует(), "файла с логом нет").ЭтоЛожь();
	
	Логгер = Обработки.фмЛоггер.СоздатьОбъект("Тест");
	Логгер.Ошибка("Событие", "описание ошибки");
	Дата = ТекущаяДатаСеанса();
	
	Ожидаем.Что(Файл.Существует(), "файла с логом появился").ЭтоИстина();
	
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ФайлСЛогом);
	
	Эталон = ПолучитьМакет("Эталон").ПолучитьТекст();
	Эталон = СтрЗаменить(Эталон, "%1", ЗаписатьДатуJSON(Дата, ФорматДатыJSON.ISO, ВариантЗаписиДатыJSON.ЛокальнаяДатаСоСмещением));
	Эталон = СтрЗаменить(Эталон, "%2", ИмяКомпьютера());
	Эталон = СтрЗаменить(Эталон, "%3", "");
	
	Ожидаем.Что(СокрЛП(ТекстДок.ПолучитьТекст()), "формат сообщения совпадает с эталоном").Равно(СокрЛП(Эталон));
	
КонецПроцедуры

Процедура Тест_ОтрабатываетсяЗапрещенныйСимволВСообщении() Экспорт
	
	Файл = Новый Файл(ФайлСЛогом);
	
	Ожидаем.Что(Файл.Существует(), "файла с логом нет").ЭтоЛожь();
	
	Логгер = Обработки.фмЛоггер.СоздатьОбъект("Тест");
	
	ПараметрыПроцедуры = Новый Массив;
	ПараметрыПроцедуры.Добавить("Событие");
	ПараметрыПроцедуры.Добавить(Метаданные.Справочники);
	
	Ожидаем.Что(Логгер, "вызов метода").Метод("Информация", ПараметрыПроцедуры).ВыбрасываетИсключение("Передано значение недопустимого типа");
	Ожидаем.Что(Файл.Существует(), "файла с логом нет").ЭтоЛожь();
	
КонецПроцедуры

Процедура Тест_ОтладочноеСообщениеПишетсяТолькоПриУстановкеПараметра() Экспорт
	
	Файл = Новый Файл(ФайлСЛогом);
	
	Ожидаем.Что(Файл.Существует(), "файла с логом нет").ЭтоЛожь();
	
	Логгер = Обработки.фмЛоггер.СоздатьОбъект("Тест");
	Логгер.Отладка("Событие", "описание ошибки");
	
	Ожидаем.Что(Файл.Существует(), "файла с логом нет").ЭтоЛожь();
	
	МенеджерЗаписи = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИмяПараметра = "ЛоггерВключитьОтладку";
	МенеджерЗаписи.ЗначениеПараметра = "Обмен,Тест";
	МенеджерЗаписи.Записать();
	ОбновитьПовторноИспользуемыеЗначения();
	
	Логгер = Обработки.фмЛоггер.СоздатьОбъект("Тест");
	Логгер.Отладка("Событие", "описание ошибки");
	
	Ожидаем.Что(Файл.Существует(), "файла с логом появился").ЭтоИстина();
	
КонецПроцедуры

Процедура Тест_СложныеДанныеИзЛогаСохраняютсяВJson() Экспорт

	Файл = Новый Файл(ФайлСЛогом);
	
	Ожидаем.Что(Файл.Существует(), "файла с логом нет").ЭтоЛожь();
	
	КлючЗаписи = РегистрыСведений.фмПараметры.СоздатьКлючЗаписи(Новый Структура("ИмяПараметра", "тест"));
	Дата = ТекущаяДатаСеанса();
	Логгер = Обработки.фмЛоггер.СоздатьОбъект("Тест");
	Логгер.Ошибка("Событие", "описание ошибки", Новый Структура("Адрес, Склад", "новый", КлючЗаписи));
	
	Ожидаем.Что(Файл.Существует(), "файла с логом появился").ЭтоИстина();
	
	ТекстДок = Новый ТекстовыйДокумент();
	ТекстДок.Прочитать(ФайлСЛогом);
	СтрокаJson = ТекстДок.ПолучитьТекст();
	ТекстДок = Неопределено;
	
	Эталон = ПолучитьМакет("ЭталонСложныеДанные").ПолучитьТекст();
	Эталон = СтрЗаменить(Эталон, "%1", ЗаписатьДатуJSON(Дата, ФорматДатыJSON.ISO, ВариантЗаписиДатыJSON.ЛокальнаяДатаСоСмещением));
	Эталон = СтрЗаменить(Эталон, "%2", ИмяКомпьютера());
	Эталон = СтрЗаменить(Эталон, "%3", "");
	Ожидаем.Что(СокрЛП(СтрокаJson), "формат сообщения совпадает с эталоном").Равно(СокрЛП(Эталон));
	
	БылаОшибка = Ложь;
	Попытка
		Лог = фмИнтеграцияКлиентСервер.UnJSON(СтрокаJson);
		фмИнтеграцияКлиентСервер.UnJSON(Лог.Data);
	Исключение
		БылаОшибка = Истина;
	КонецПопытки;
	Ожидаем.Что(БылаОшибка, "ошибка преобразования сложных данных").Равно(Ложь);
	
КонецПроцедуры

Процедура Тест_ЛогированиеРаботаетПослеИсключенияПриЗаписиВБазу() Экспорт
	
	Файл = Новый Файл(ФайлСЛогом);
	Ожидаем.Что(Файл.Существует(), "файла с логом нет").ЭтоЛожь();
	
	Логгер = Обработки.фмЛоггер.СоздатьОбъект("Тест");
	
	Попытка
		МенеджерЗаписи = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Записать();
	Исключение
		Ошибка = ИнформацияОбОшибке();
	КонецПопытки;
	
	Логгер.Ошибка("Событие", Ошибка);
	
	Ожидаем.Что(Файл.Существует(), "файла с логом появился").ЭтоИстина();
	
КонецПроцедуры

Процедура Тест_ОтладкаРаботаетПослеИсключенияПриЗаписиВБазу() Экспорт
	
	МенеджерЗаписи = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИмяПараметра = "ЛоггерВключитьОтладку";
	МенеджерЗаписи.ЗначениеПараметра = "Тест";
	МенеджерЗаписи.Записать();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Файл = Новый Файл(ФайлСЛогом);
	Ожидаем.Что(Файл.Существует(), "файла с логом нет").ЭтоЛожь();
	
	Логгер = Обработки.фмЛоггер.СоздатьОбъект("Тест");
	
	Попытка
		МенеджерЗаписи = РегистрыСведений.фмПараметры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Записать();
	Исключение
		Ошибка = ИнформацияОбОшибке();
	КонецПопытки;
	
	Логгер.Отладка("Событие", Ошибка);
	
	Ожидаем.Что(Файл.Существует(), "файла с логом появился").ЭтоИстина();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
