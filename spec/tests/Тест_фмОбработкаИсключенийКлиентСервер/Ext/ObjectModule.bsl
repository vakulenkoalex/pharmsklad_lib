
// BSLLS:BeginTransactionBeforeTryCatch-off
// BSLLS:DuplicateStringLiteral-off
// BSLLS:MagicNumber-off
// BSLLS:PairingBrokenTransaction-off
// BSLLS:PublicMethodsDescription-off
// BSLLS:UsingServiceTag-off
// BSLLS:WrongUseOfRollbackTransactionMethod-off

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем КонтекстЯдра; // Контекст проигрывателя тестов
Перем Ожидаем; // Контекст плагина с методами проверки утверждений

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область xddTestRunner

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("Тест_ЛовимНужнуюОшибку");
	НаборТестов.Добавить("Тест_ПропускаемНеНужнуюОшибку");
	
КонецПроцедуры

#КонецОбласти

#Область ЮнитТесты

#Область ОбщиеПроцедурыТестов

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеТестов

Процедура Тест_ЛовимНужнуюОшибку() Экспорт
	
	Ошибка = "Нужная";
	
	Попытка
		Проверка(Ошибка);
	Исключение
		Результат = фмОбработкаИсключенийКлиентСервер.ЯвляетсяОшибкойНужногоТипа(ИнформацияОбОшибке(), Ошибка);
	КонецПопытки;
	
	Ожидаем.Что(Результат, "результат проверки").ЭтоИстина();
	
КонецПроцедуры

Процедура Тест_ПропускаемНеНужнуюОшибку() Экспорт
	
	Попытка
		Проверка("Другая");
	Исключение
		Результат = фмОбработкаИсключенийКлиентСервер.ЯвляетсяОшибкойНужногоТипа(ИнформацияОбОшибке(), "Нужная");
	КонецПопытки;
	
	Ожидаем.Что(Результат, "результат проверки").ЭтоЛожь();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Проверка(Знач Ошибка)
	ВызватьИсключение Ошибка;
КонецФункции

#КонецОбласти

#КонецЕсли
